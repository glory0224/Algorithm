# H-Index 문제

# H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index는 다음과 같이 구합니다.

# 어떤 과학자가 발표한 논문 n편 중, h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 h의 최댓값이 이 과학자의 H-Index입니다.

# 어떤 과학자가 발표한 논문의 인용 횟수를 담은 배열 citations가 매개변수로 주어질 때, 이 과학자의 H-Index를 return 하도록 solution 함수를 작성해주세요.

# 제한사항
# 과학자가 발표한 논문의 수는 1편 이상 1,000편 이하입니다.
# 논문별 인용 횟수는 0회 이상 10,000회 이하입니다.

# 입출력 설명
# 이 과학자가 발표한 논문의 수는 5편이고, 그중 3편의 논문은 3회 이상 인용되었습니다. 그리고 나머지 2편의 논문은 3회 이하 인용되었기 때문에 이 과학자의 H-Index는 3입니다.

# 정렬된 배열에서 원하는 조건을 만족하는 값을 찾는 "이진 탐색" 의 변형 문제

# 오름차순으로 정렬된 배열에서 인용 횟수가 현재 논문의 순번보다 크거나 같은 조건을 만족하는 값을 찾는다.

# 배열의 중간값과 비교하여 탐색 범위를 좁혀가는 전형적인 이진 탐색 알고리즘과 달리 순차적으로 탐색하면서 조건을 체크한다.

def solution(citations):
    

    # 논문 인용 횟수 기준 오름차순 정렬
    citations.sort()
    # 논문의 길이
    n = len(citations)

    H_index = 0 # 과학자의 h-index

    # print(citations)

    # 논문의 길이만큼 돌면서 현재 논문 인용 횟수가 n - i 보다 크거나 같다면 종료
    for i in range(n):
        if citations[i] >= n - i:
            # print("n :", n)
            # print("i : ", i)
            H_index = n - i # 최대값 대입
            break # 종료 

    return H_index

print(solution([3, 0, 6, 1, 5])) # return 3

