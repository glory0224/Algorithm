# 어디에 단어가 들어갈 수 있을까? 문제 

# N X N 크기의 단어 퍼즐을 만들려고 한다. 입력으로 단어 퍼즐의 모양이 주어진다.

# 주어진 퍼즐 모양에서 특정 길이 K를 갖는 단어가 들어갈 수 있는 자리의 수를 출력하는 프로그램을 작성하라.

# [예제]

# N = 5, K = 3 이고, 퍼즐의 모양이 아래 그림과 같이 주어졌을 때

# 이가 3 인 단어가 들어갈 수 있는 자리는 2 곳(가로 1번, 가로 4번)이 된다.
 


# [제약 사항]

# 1. N은 5 이상 15 이하의 정수이다. (5 ≤ N ≤ 15)

# 2. K는 2 이상 N 이하의 정수이다. (2 ≤ K ≤ N)


# [입력]

# 입력은 첫 줄에 총 테스트 케이스의 개수 T가 온다.

# 다음 줄부터 각 테스트 케이스가 주어진다.

# 테스트 케이스의 첫 번째 줄에는 단어 퍼즐의 가로, 세로 길이 N 과, 단어의 길이 K 가 주어진다.

# 테스트 케이스의 두 번째 줄부터 퍼즐의 모양이 2차원 정보로 주어진다.

# 퍼즐의 각 셀 중, 흰색 부분은 1, 검은색 부분은 0 으로 주어진다.


# [출력]

# 테스트 케이스 t에 대한 결과는 “#t”을 찍고, 한 칸 띄고, 정답을 출력한다.

# (t는 테스트 케이스의 번호를 의미하며 1부터 시작한다.)

# 입력
# 10
# 5 3
# 0 0 1 1 1
# 1 1 1 1 0
# 0 0 1 0 0
# 0 1 1 1 1
# 1 1 1 0 1
# 5 3
# 1 0 0 1 0
# 1 1 0 1 1
# 1 0 1 1 1
# 0 1 1 0 1
# 0 1 1 1 0
# …

# 출력
# #1 2
# #2 6
# ...

# 문제 풀이 방식의 시간복잡도는 O(N^2 * K)

# 입력 값 N의 범위가 5이상 15이하로 제한되어 있어 큰 문제 없이 처리

T = int(input())

for tc in range(1, T+1):
    n, k = map(int, input().split())
    nList = [list(map(int, input().split())) for _ in range(n)]
    answer =0
    
    # 가로 확인
    for i in range(n) :
        cnt = 0
        for j in range(n):
            if nList[i][j] == 1: # 흰부분(통과)
                cnt += 1
            else: # 0 - 검은 부분(통과못함)
                if cnt == k: # 가로 중에서 k 길이와 같을때
                    answer += 1
                cnt = 0 # 다시 처음부터 탐색할 수 있도록 초기화
        
        if cnt == k: # 마지막 열일 때 확인 
            answer += 1

    # 세로 확인
    # 위와 같은 방식으로 확인

    for i in range(n):
        cnt = 0
        for j in range(n):
            if nList[j][i] == 1:
                cnt += 1
            else:
                if cnt == k: # 세로중에서 k 길이와 같을 때 
                    answer += 1
                cnt = 0
        
        if cnt == k: # 마지막 행 확인
            answer += 1
    
    
    print(f"#{tc} {answer}")


