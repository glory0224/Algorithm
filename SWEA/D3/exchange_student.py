# 교환학생 문제 

# 그리디 알고리즘

#  세계 최고의 명문 대학교 삼성대학교에는 수많은 교환학생들이 존재한다. 삼성대학교는 연중무휴로 운영되지만, 교환학생들을 위한 수업은 특정 요일에만 진행된다. 이 정보는 7개의 정수 a1, a2, …, a7으로 표현되는데 (ai = 0 or ai = 1):

#   · 일요일에 교환학생을 위한 수업이 열리면 a1 = 1, 아니면 0
#   · 월요일에 교환학생을 위한 수업이 열리면 a2 = 1, 아니면 0
#   · …
#   · 토요일에 교환학생을 위한 수업이 열리면 a7 = 1, 아니면 0
 
#   수업이 어떠한 요일에도 열리지 않는 경우는 없다고 가정해도 된다.
#   당신은 삼성대학교에서 교환학생으로 n일 동안 수업을 들으려고 한다. 목표를 이루기 위해 삼성대학교에 지내야 하는 최소 일수를 출력하라.

# [입력]
#   첫 번째 줄에 테스트 케이스의 수 TC가 주어진다. 이후 TC개의 테스트 케이스가 새 줄로 구분되어 주어진다. 각 테스트 케이스는 다음과 같이 구성되었다.

#   · 첫 번째 줄에 정수 n이 주어진다. (1≤ n ≤105)
#   · 이후 7개의 정수 a1, a2, …, a7이 주어진다. (0 ≤ ai ≤ 1)

# [출력]
#   각 테스트 케이스마다 문제의 정답을 출력하라.

# 입력
# 3
# 2
# 0 1 0 0 0 0 0
# 100000
# 1 0 0 0 1 0 1
# 1
# 1 0 0 0 0 0 0

# 출력
# #1 8
# #2 233332
# #3 1

# 수업 시작일 = 1, 특정 요일을 선택하면 그 요일에만 듣는다. 

# 시작 요일로부터 N일 동안(N번) 수업을 듣기 위해 최소한의 일자를 구하는 문제 

T = int(input())

for tc in range(1, T+1):
    
    # 수업을 들어야하는 일자 N
    N = int(input())

    # 수업 일정
    schedule = list(map(int, input().split()))

    # 수업 시작일을 넣어줄 리스트
    schedule_start = []

    # 시작일 넣는다.
    for day in range(len(schedule)):
        # 수업이 있는 날이라면 
        if schedule[day] == 1:
            schedule_start.append(day)

    
    min_days = 1e9 # 파이썬 최대값 선언 변수

    # 수업 시작일로부터 N을 충족할 때까지 최소 일자를 구함
    for day in schedule_start:
        dayCnt = 0
        classCnt = 0
        while classCnt < N:
            # 수업이 있는 경우 classCnt + 1
            if schedule[day] == 1:
                classCnt += 1
            # 일자 +1
            dayCnt += 1

            if day > 5: # day가 6일째 되면 일자는 더해주고 인덱스를 다시 0으로 해서 일요일부터 돌 수 있도록 한다. 
                day = 0
            else:
                day += 1
            
        # min 함수를 이용해서 최소 일수 비교하면서 갱신
        min_days = min(min_days, dayCnt)

    
    print(f"#{tc} {min_days}")




            



