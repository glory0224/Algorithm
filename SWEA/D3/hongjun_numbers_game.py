# 홍준이의 숫자 놀이


# 숫자를 좋아하는 홍준이는 다음과 같은 놀이를 하고 있다.

# 서로소인 두 자연수 A와 B를 정한 후, Ax + By = 1이 되는 x와 y를 계산하는 것이다.

# 홍준이는 A와 B가 작을 때에는 암산으로 쉽게 계산할 수 있었는데, 두 수가 클 때의 계산에는 어려움을 느끼고 있다.

# 여러분은 홍준이를 도와, 두 자연수 A와 B가 주어졌을 때에 Ax + By = 1이 되는 x와 y를 계산하는 프로그램을 작성하시오.


# [입력]

# 첫 줄에 테스트케이스의 개수 T가 주어진다. (1 ≤ T ≤ 10,000)

# 각 테스트케이스의 첫째 줄에 두 자연수 A와 B가 주어진다. (1 ≤ A, B ≤ 109)


# [출력]

# 각 테스트케이스마다 한 줄에 걸쳐, 테스트케이스 수 “#(테스트케이스 번호) “를 출력하고, Ax + By = 1이 되는 x와 y를 출력한다.

# 가능한 x와 y 쌍이 유일하지 않다면, 아무것이나 출력해도 된다.

# 가능한 해가 없는 경우에는 -1을 출력한다.

# 입력
# 2
# 3 5
# 7 2

# 출력
# #1 2 -1
# #2 1 -3

# 확장된 유클리드 호제법을 사용하면 쉽게 풀이 가능

def extend_uclead(A, B):
    # 최대 공약수가 A인 경우
    if B == 0:
        return A, 1, 0
    
    gcd , x1, y1 = extend_uclead(B, A % B)

    x = y1

    y = x1 - (A // B) * y1

    return gcd, x, y # 최대 공약수가 1일 때의 해 x, y

T = int(input())

for tc in range(1, T+1):

    A, B = map(int, input().split())

    gcd, x, y = extend_uclead(A, B)

    print(f"#{tc} {x} {y}")
