# 세가지 합 구하기

# N을 입력 받아 다음의 세 가지 합을 구하는 프로그램을 작성하라.

# S1 = 양의 정수 중에서 작은 순서대로 N개의 합.

# S2 = 양의 정수 중 홀수인 것들 중에서 작은 순서대로 N개의 합.

# S3= 양의 정수 중 짝수인 것들 중에서 작은 순서대로 N개의 합.

# 예를 들어 N = 5의 입력이 들어왔을 경우,

# S1 = 1 + 2 + 3 + 4 + 5,

# S2 = 1 + 3 + 5 + 7 + 9,

# S3 = 2 + 4 + 6 + 8 + 10 이다.


# [입력]

# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.

# 각 테스트 케이스의 첫 번째 줄에는 자연수 N(1 ≤ N ≤ 109)가 주어진다.


# [출력]

# 각 테스트 케이스마다 S1, S2, S3을 공백으로 구분하여 출력한다.

# 입력
# 3
# 1
# 10
# 1001

# 출력
# #1 1 1 2
# #2 55 100 110
# #3 501501 1002001 1003002

T = int(input())

answer = [] # 시간초과를 고려한 답 한번에 출력 리스트

for tc in range(1, T+1):
    N = int(input())

    #S1은 양의 정수 중에서 작은 순서대로 N개의 합
    # 1부터 N까지의 모든 양의 정수를 더하는 것
    # 이를 수학적으로 표현하면 등차 수열의 합으로 표현
    # 등차 수열의 합 공식 사용 S1 계산
    # S1 = N * (N+1) // 2, //는 정수 나눗셈 의미
    S1 = N * (N+1) // 2 # S1 계산

    # S2는 양의 정수 중에서 홀수인 것들 중에서 작은 순서대로 N개의 합
    # 홀수부터 시작해서 2씩 증가하는 등차수열을 이루므로, 홀수의 합은 홀수의 개수인 N개를 제곱한 값과 같다.
    S2 = N * N # s2 계산

     # S3 는 양의 정수 중에서 짝수인 것들 중에서 작은 순서대로 N개의 합
    # 짝수부터 시작해서 2씩 증가하는 등차수열을 이루므로, 짝수의 합은 짝수의 개수인 N개를 제곱한 값에 N을 곱한 것과 같다.

    S3 = N * (N + 1)

    answer.append(f"#{tc} {S1} {S2} {S3}")

for x in answer:
    print(x)