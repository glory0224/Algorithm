# 공과 잡초

# 1차원 초원이 있었다.

# ................

 
# 여기에 공을 몇 개 놓았다. 공은 열린 괄호와 닫힌 괄호가 붙어 있는 ‘()’로 표현되며, 서로 다른 두 공이 겹치지 않는다.

# ...()..()()...().

 
# 여기에 잡초가 자라서 몇 개의 칸이 가려지게 되었다. 잡초는 ‘|’로 표현된다.

# |..(|.||)||||.().

 
# 위와 같은 과정을 통해 얻어진 문자열이 주어진다. 이때, 초원에 놓았을 수 있는 공의 개수의 최솟값을 구하는 프로그램을 작성하라.

# [입력]

# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.

# 각 테스트 케이스는 한 개의 줄로 이루어지며, 각 줄에는 길이가 1이상 50 이하인 문자열 S가 주어진다. 이 문자열은 위의 과정을 통해 만들어졌음이 보장된다.

# [출력]

# 각 테스트 케이스마다, 초원에 놓였을 수 있는 공의 개수의 최솟값을 구하는 프로그램을 작성하라.

# 입력
# 3
# ||||||
# (|..|)
# .|.(|...||)|...()..

# 출력
# #1 0
# #2 2
# #3 3

# 초원이 () 이거나 |) 이거나 (| 인 경우 확인하고 cnt 증가하는 문제

T = int(input())

for tc in range(1, T+1):

    grassland = input()

    # 최소값
    cnt = 0
    for i in range(len(grassland)-1):
        if grassland[i] == '(' and grassland[i+1] == ')':
            cnt += 1

        elif grassland[i] == '(' and grassland[i+1] == '|':
            cnt += 1
        
        elif grassland[i] == '|' and grassland[i+1] == ')':
            cnt += 1
    
    print(f"#{tc} {cnt}")


            

