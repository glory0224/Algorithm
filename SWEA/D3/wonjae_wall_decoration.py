# 원재의 벽 꾸미기

# 새 집으로 이사를 온 원재는 밋밋한 방을 꾸미기 위해 1 X 1타일 N개를 이용해 R X C 크기의 직사각형 인테리어를 하나 만들어 벽면을 꾸미려고 한다.

# 그런데, 원재의 방은 정사각형 형태이기 때문에 만드는 직사각형 인테리어를 최대한 정사각형에 가깝게 만들면서, 최대한 많은 타일을 사용하려고 한다.

# 두 조건을 모두 만족하기 어렵다고 판단한 원재는 이 두 조건에 대해 가중치 A, B를 가지고 나름의 식을 도출해냈다.

# A X lR – Cl + B X (N - R X C)

# 원재는 위의 값을 최소화하려고 한다. 최소화된 이 값을 출력하는 프로그램을 작성하라.

# [입력]

# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.

# 각 테스트 케이스의 첫 번째 줄에는 세 정수 N, A, B(1 ≤ N, A, B ≤ 10^5)가 공백으로 구분되어 주어진다.

# [출력]

# 각 테스트 케이스마다 ‘#x’(x는 테스트케이스 번호를 의미하며 1부터 시작한다)를 출력하고, 답을 출력한다.

# 원재 방이 정사각형 = 정사각형 한변의 길이 R 

# 직사각형 가로 길이 = C

# 1 * 1 타일은 N개

# R * C 의 길이가 타일의 개수 N을 넘어가지 않도록 하는 최소 값

# 입력
# 2
# 37 1 1
# 21 10 1

# 출력
# #1 1
# #2 5

T = int(input())

answer = []

for tc in range(1, T+1):
    
    N , A, B = map(int, input().split())

    min_val = - 1 # 최소값

    for i in range(1, N+1): 
        
        j = 1
        # A X lR – Cl + B X (N - R X C)
        while i * j <= N:
            # 최소값 계산
            res = A * abs(i - j) + B * (N - i * j)

            if min_val == -1: # 초기에 -1인경우
                min_val = res # 최소값 넣기
        
            else:
                min_val = min(min_val, res)
        
            j += 1 

    answer.append(f"#{tc} {min_val}")

for x in answer:
    print(x)








