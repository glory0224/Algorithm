# 1차원 정원 

# 1차원 수직선 위에 정원이 있다. 모든 정수 1 ≤ i ≤ N 에 대해, 좌표 i에 꽃이 하나씩 심겨 있다. 즉, 좌표 1, 2, …, N에 총 N개의 꽃이 심겨 있다.
# 꽃에 물을 주기 위해 자동 분무기를 사용한다. 분무기는 정수 좌표에 놓을 수 있으며, 좌표 x에 분무기를 놓았을 경우 닫힌 구간 [x - D, x + D]에 심긴 모든 꽃들에 물을 줄 수 있다.
# N과 D가 주어질 때, 모든 꽃이 한 개 이상의 분무기에서 물을 받을 수 있도록 하기 위해 필요한 최소한의 분무기 수를 구하는 프로그램을 작성하라.

# [입력]
# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
# 각 테스트 케이스는 하나의 줄로 이루어진다. 각 줄에는 두 개의 정수 N과 D (1 ≤ N, D ≤ 100) 가 공백 하나를 사이로 두고 주어진다.

# [출력]
# 각 테스트 케이스마다 모든 꽃이 한 개 이상의 분무기에서 물을 받을 수 있도록 하기 위해 필요한 최소한의 분무기 수를 출력한다.

# 입력
# 3
# 5 1
# 5 2
# 100 3

# 출력
# #1 2
# #2 1
# #3 15

# 핵심은 D 해당하는 것이 x 기준으로 앞 뒤로 나오기 때문에 2 * D + 1 의 범위를 가진다는 것
# N을 범위로 나눈 값이 분무기 개수 - 소수점은 나올 수 없기 때문에 올림 처리한다. 

import math

T = int(input())

for tc in range(1, T+1):

    N, D = map(int, input().split())

    d = 2 * D + 1 # 분무기 하나당 물을 줄 수 있는 범위(이 공식 도출이 중요)
    
    answer = math.ceil(N / d) # 최소 분무기

    print(f"#{tc} {answer}")


